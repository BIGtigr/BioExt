#!/usr/bin/env python3

from Bio import AlignIO
from Bio.Align import MultipleSeqAlignment
from BioExt.io import BamIO
from BioExt.misc import strip_insertions


def main(bam_handle, out_handle):
    seqs = []

    for record in BamIO.parse(bam_handle):
        seqs.append(strip_insertions(record))

    length = max(len(seq) for seq in seqs)

    msa = MultipleSeqAlignment(
        [seq + ('-' * (length - len(seq))) for seq in seqs]
        )

    AlignIO.write(msa, out_handle, 'fasta')

    return 0


if __name__ == '__main__':
    import sys
    import argparse

    parser = argparse.ArgumentParser(
        description='convert a BAM file to a MSA, removing insertions'
        )

    parser.add_argument(
        'input',
        metavar='INPUT',
        type=argparse.FileType('rb'),
        help='input BAM file'
        )
    parser.add_argument(
        'output',
        default=sys.stdout,
        metavar='OUTPUT',
        type=argparse.FileType('w'),
        help='output FASTA MSA file'
        )

    args = None
    retcode = -1
    try:
        args = parser.parse_args()
        retcode = main(args.input, args.output)
    finally:
        if args is not None:
            if args.output != sys.stdout:
                args.output.close()

    sys.exit(retcode)
